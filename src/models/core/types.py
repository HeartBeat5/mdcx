from typing import TypedDict


class JsonData(TypedDict):
    cover_size: tuple[int, int]
    poster_big: bool
    actor_amazon: list[str]
    tag_only: str
    only_tag_list: list[str]
    fanart_from: str
    image_cut: str
    file_can_download: bool
    nfo_can_translate: bool
    nfo_update: bool
    dont_move_movie: bool
    del_file_path: bool
    title: str
    outline: str
    failed_folder: str
    folder_name: str
    version: int
    logs: str
    req_web: str
    image_download: bool
    outline_from: str
    cover_from: str
    poster_from: str
    extrafanart_from: str
    trailer_from: str
    short_number: str
    appoint_number: str
    appoint_url: str
    website_name: str
    fields_info: str
    poster_path: str
    thumb_path: str
    fanart_path: str
    cover_list: list[tuple[str, str]]
    number: str
    letters: str
    has_sub: bool
    c_word: str
    cd_part: str
    destroyed: str
    leak: str
    wuma: str
    youma: str
    mosaic: str
    tag: str
    actor_href: str
    all_actor: str
    definition: str
    file_path: str
    poster_marked: bool
    thumb_marked: bool
    fanart_marked: bool
    error_info: str
    _4K: str
    source: str
    cover: str
    actor_amazon: list[str]
    release: str
    year: str
    javdbid: str
    score: str
    originaltitle: str
    studio: str
    publisher: str
    runtime: str
    director: str
    actor_photo: str
    website: str
    series: str
    trailer: str
    actor: str
    poster: str
    log_info: str
    all_actor_photo: dict
    amazon_orginaltitle_actor: str
    originaltitle_amazon: str
    originalplot: str
    wanted: str
    naming_media: str
    naming_file: str
    extrafanart: str
    country: str


def new_json_data() -> JsonData:
    return {
        "cover_size": (0, 0),
        "poster_big": False,
        "country": "",
        "naming_file": "",
        "naming_media": "",
        "wanted": "",
        "originalplot": "",
        "originaltitle_amazon": "",
        "amazon_orginaltitle_actor": "",
        "all_actor_photo": {},
        "log_info": "",
        "poster": "",
        "actor": "",
        "score": "0.0",
        "javdbid": "",
        "year": "",
        "release": "",
        "actor_amazon": [],
        "tag_only": "",
        "only_tag_list": [],
        "fanart_from": "",
        "image_cut": "",
        "extrafanart": "",
        "cover": "",
        "source": "",
        "file_can_download": False,
        "nfo_can_translate": False,
        "nfo_update": False,
        "version": 0,
        "logs": "",
        "req_web": "",
        "image_download": False,
        "outline_from": "",
        "cover_from": "",
        "poster_from": "",
        "extrafanart_from": "",
        "trailer_from": "",
        "short_number": "",
        "appoint_number": "",
        "appoint_url": "",
        "website_name": "",
        "fields_info": "",
        "poster_path": "",
        "thumb_path": "",
        "fanart_path": "",
        "cover_list": [],
        "number": "",
        "letters": "",
        "has_sub": False,
        "c_word": "",
        "cd_part": "",
        "destroyed": "",
        "leak": "",
        "wuma": "",
        "youma": "",
        "mosaic": "",
        "tag": "",
        "actor_href": "",
        "all_actor": "",
        "definition": "",
        "file_path": "",
        "poster_marked": True,
        "thumb_marked": True,
        "fanart_marked": True,
        "error_info": "",
        "dont_move_movie": False,
        "del_file_path": False,
        "title": "",
        "outline": "",
        "failed_folder": "",
        "folder_name": "",
        "_4K": "",
        "originaltitle": "",
        "studio": "",
        "publisher": "",
        "runtime": "",
        "director": "",
        "actor_photo": "",
        "website": "",
        "series": "",
        "trailer": "",
    }
